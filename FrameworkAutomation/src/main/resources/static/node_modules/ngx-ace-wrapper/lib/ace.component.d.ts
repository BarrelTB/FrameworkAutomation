import 'brace';
import 'brace/mode/text';
import 'brace/theme/github';
import { AfterViewInit, EventEmitter } from '@angular/core';
import { AceDirective } from './ace.directive';
import { AceConfigInterface } from './ace.interfaces';
import * as ɵngcc0 from '@angular/core';
export declare class AceComponent implements AfterViewInit {
    private content;
    get value(): string;
    set value(value: string);
    disabled: boolean;
    mode: string;
    theme: string;
    config?: AceConfigInterface;
    useAceClass: boolean;
    blur: EventEmitter<any>;
    focus: EventEmitter<any>;
    copy: EventEmitter<any>;
    paste: EventEmitter<any>;
    change: EventEmitter<any>;
    valueChange: EventEmitter<string>;
    changeCursor: EventEmitter<any>;
    changeSession: EventEmitter<any>;
    changeSelection: EventEmitter<any>;
    directiveRef?: AceDirective;
    constructor();
    ngAfterViewInit(): void;
    private setContent;
    getConfig(): AceConfigInterface;
    onContentChange(event: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AceComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AceComponent, "ace", ["ngxAce"], {
    "disabled": "disabled";
    "mode": "mode";
    "theme": "theme";
    "useAceClass": "useAceClass";
    "value": "value";
    "config": "config";
}, {
    "blur": "blur";
    "focus": "focus";
    "copy": "copy";
    "paste": "paste";
    "change": "change";
    "valueChange": "valueChange";
    "changeCursor": "changeCursor";
    "changeSession": "changeSession";
    "changeSelection": "changeSelection";
}, never>;
}

//# sourceMappingURL=ace.component.d.ts.map