import * as ace from 'brace';
import { OnInit, DoCheck, OnDestroy, OnChanges, EventEmitter, NgZone, ElementRef, KeyValueDiffers, SimpleChanges } from '@angular/core';
import { AceConfigInterface } from './ace.interfaces';
import * as ɵngcc0 from '@angular/core';
export declare class AceDirective implements OnInit, DoCheck, OnDestroy, OnChanges {
    private zone;
    private elementRef;
    private differs;
    private defaults;
    private instance;
    private configDiff;
    disabled: boolean;
    config?: AceConfigInterface;
    blur: EventEmitter<any>;
    focus: EventEmitter<any>;
    copy: EventEmitter<any>;
    paste: EventEmitter<any>;
    change: EventEmitter<any>;
    changeCursor: EventEmitter<any>;
    changeSession: EventEmitter<any>;
    changeSelection: EventEmitter<any>;
    constructor(zone: NgZone, elementRef: ElementRef, differs: KeyValueDiffers, defaults: AceConfigInterface);
    ngOnInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ace(): ace.Editor | null;
    clear(): void;
    getValue(): string | undefined;
    setValue(value: string, cursorPos?: -1 | 1): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AceDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<AceDirective, "[ace]", ["ngxAce"], {
    "disabled": "disabled";
    "config": "ace";
}, {
    "blur": "blur";
    "focus": "focus";
    "copy": "copy";
    "paste": "paste";
    "change": "change";
    "changeCursor": "changeCursor";
    "changeSession": "changeSession";
    "changeSelection": "changeSelection";
}, never>;
}

//# sourceMappingURL=ace.directive.d.ts.map